apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: test1
  name: test1
  namespace: devops-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: test1
    spec:
      terminationGracePeriodSeconds: 31
      volumes:
      - name: tls-vol
        secret:
          secretName: secret-file
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:80;https://+:443
        - name: ASPNETCORE_Kestrel__Certificates__Default__Password
          value: pabel
        - name: ASPNETCORE_Kestrel__Certificates__Default__Path
          value: /etc/tls-vol/cer_key.pfx

        image: docker.io/01521433811/backend-project-api:TAG_NUMBER
        name: backendcqrs
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/tls-vol
          name: tls-vol

        resources: {}

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - ansible-node1
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: test1
  name: test1
  namespace: devops-test
spec:
  type: LoadBalancer
  selector:
    app: test1
  ports:
  - protocol: TCP
    port: 80
    name: http
  - port: 443
    protocol: TCP
    name: https
status:
  loadBalancer: {}